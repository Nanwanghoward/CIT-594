For stack part, basically I just use MyGenericNode<T> class to create a note, then whenever I add an element, I create a new node, and update the head to the new one, so that I can use head to track the top of stack. So that I implement push method. For pop, I just use head to get the first element of stack, and remove and return it, update the head. For the size, every pop and push, will increment or decrement the size, so that size can be updated. And for isEmpty part, just use size to tell if it is empty. So that all 4 methods should be O(1).
For PalindromeChecker class, first I use isChar method to return if it is letter or number. Then in check() method, I create 2 stacks, each one store the half part of valid string (composed of letters or numbers). So that I can use pop method to compare this two stacks.
For PalindromeTester class, user will continue to input string from console to get the result of string is palindrome or not.